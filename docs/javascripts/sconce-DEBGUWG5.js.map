{
  "version": 3,
  "sources": ["../../javascripts/png.js", "../../node_modules/esbuild-plugin-ghpages-pwa/src/pwa.js", "../../javascripts/sconce.js"],
  "sourcesContent": ["export default (buffer) => {\n  // grab 64 bytes\n  let dv = new DataView(buffer, 0, 64);\n  // verify PNG header\n  // https://en.wikipedia.org/wiki/Portable_Network_Graphics#File_header\n  if (dv.getUint32(0) === 0x89504E47 && dv.getUint32(4) === 0x0D0A1A0A) {\n    // assume IHDR starts at offset 16\n    return {\n      width: dv.getUint32(16),\n      height: dv.getUint32(20),\n      depth: dv.getUint8(24)\n    }\n  } else {\n    throw 'invalid PNG file'\n  }\n}\n\n", "export default (dir) => {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.register(`/${dir}/service.js`, {scope: `/${dir}/`}).then((registration) => {\n      const refreshPage = (worker) => {\n        if (worker.state != 'activated') {\n          worker.postMessage({action: 'skipWaiting'});\n        }\n        window.location.reload();\n      }\n      if (registration.waiting) {\n        refreshPage(registration.waiting);\n      }\n      registration.addEventListener('updatefound', () => {\n        let newWorker = registration.installing;\n        newWorker.addEventListener('statechange', () => {\n          if (newWorker.state === 'installed') {\n            refreshPage(newWorker);\n          }\n        });\n      });\n    });\n  }\n}\n", "import pngDimensions from './png.js';\nimport pwa from 'esbuild-plugin-ghpages-pwa/src/pwa.js';\n\nlet $images = [];\nlet $icondirentryBytes = 16;\n\npwa('sconce');\n\nconst readFile = (file) => {\n  return new Promise((resolve, rejected) => {\n    let fileReader = new FileReader();\n    fileReader.onloadend = resolve;\n    fileReader.readAsArrayBuffer(file);\n  })\n}\nconst dropHandler = async function(e, img, size) {\n  e.stopPropagation();\n  e.preventDefault();\n  for (let file of e.dataTransfer.files) {\n    let { target } = await readFile(file)\n    let buffer = target.result;\n    let png = pngDimensions(buffer);\n    if (png.width === png.height) {\n      if ($images.findIndex(i => i[0].width == png.width) < 0) {\n        //find element\n        let img = document.querySelector(`img[data-size='${png.width}']`)\n        if (img) {\n          img.src = URL.createObjectURL(file);\n          let index = $images.push([png, buffer]);\n          img.setAttribute('data-index', index - 1);\n          enableGenerateButton();\n          img.classList.remove('drop-active'); //prevent odd returns in try block\n        }\n      }\n    } else {\n      alert('Image does not match size');\n    }\n  }\n};\n\nconst fileSaver = function(blob) {\n  let url = URL.createObjectURL(blob);\n  let anchor = document.createElement('a');\n  anchor.setAttribute('download', 'favicon.ico');\n  anchor.href = url;\n  return anchor.click();\n};\n\nconst generateIco = function(e) {\n  // get indices for images\n  // because a user can drop multiple images over top one another\n  // it is not always every img in $images\n  let indices = Array.from(document.querySelectorAll('figure img[data-index]')).map(function(img) {\n    return Number(img.getAttribute('data-index'));\n  });\n  if (indices.length > 0) {\n    const icondirBytes = 6;\n    // ICONDIR\n    let size = icondirBytes + (indices.length * $icondirentryBytes);\n    let buffer = new ArrayBuffer(size);\n    let dataView = new DataView(buffer);\n    dataView.setUint16(0, 0);\n    dataView.setUint16(2, 1, true); // 1 for .ico\n    dataView.setUint16(4, indices.length, true); // number of images\n    let offset = size;\n    let buffers = [buffer];\n    for (let i of indices) {\n      let [png, imgBuffer] = $images[i];\n      buffers.push(imgBuffer);\n      offset = addImage(dataView, png, imgBuffer, size, i);\n    }\n    // generate file\n    let icoFile = new Blob(buffers, {\n      type: 'image/x-icon'\n    });\n    return fileSaver(icoFile);\n  }\n};\n\nconst addImage = function(dataView, png, imgBuffer, offset, i) {\n  let dirOffset = i * $icondirentryBytes;\n  //ICONDIRENTRY\n  dataView.setUint8(6 + dirOffset, png.width); // width\n  dataView.setUint8(7 + dirOffset, png.height); // width\n  dataView.setUint8(8 + dirOffset, 0); // palette?\n  dataView.setUint8(9 + dirOffset, 0);\n  dataView.setUint16(10 + dirOffset, 1, true); // color planes\n  dataView.setUint16(12 + dirOffset, png.depth * 4, true); // bits per channel (RBGA)\n  dataView.setUint32(14 + dirOffset, imgBuffer.byteLength, true); // file size\n  dataView.setUint32(18 + dirOffset, offset, true); // offset\n  return offset + imgBuffer.byteLength;\n};\n\nconst enableGenerateButton = function() {\n  return document.querySelector('#generate').disabled = false;\n};\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  for (let img of document.querySelectorAll('figure img[data-size]')) {\n    // read in size on page load, so DOM modification does not effect code\n    let size = Number(img.getAttribute('data-size'));\n    img.addEventListener('drop', function(e) {\n      return dropHandler(e, img, size);\n    });\n    img.addEventListener('dragleave', function(e) {\n      return this.classList.remove('drop-active');\n    });\n    img.addEventListener('dragover', function(e) {\n      e.dataTransfer.dropEffect = 'copy';\n      this.classList.add('drop-active');\n      return e.preventDefault();\n    });\n  }\n  return document.querySelector('#generate').addEventListener('click', generateIco);\n});\n"],
  "mappings": "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",
  "names": []
}
